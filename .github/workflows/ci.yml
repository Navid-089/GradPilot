name: CI/CD

on:
  push:
    branches: [main]

permissions:
  contents: read
  packages: write

jobs:
  build-test-and-dockerize:
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Java
        uses: actions/setup-java@v4
        with:
          distribution: "temurin"
          java-version: "17"

      - name: Build chatbot
        working-directory: services/chatbot
        run: ./mvnw clean package

      - name: Build login-reg
        working-directory: services/login-reg
        run: ./mvnw clean package

      - name: Build Recommendation
        working-directory: services/recommendation
        run: ./mvnw clean package

      - name: Build SOP Review Service
        working-directory: services/sop-review-service
        run: ./mvnw clean package

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18"

      - name: Install frontend dependencies
        working-directory: services/frontend
        run: npm install

      # - name: Install Playwright
      #   working-directory: services/frontend
      #   run: npx playwright install --with-deps

      - name: Run Playwright E2E tests
        working-directory: services/frontend
        run: npx playwright test 

      - name: Run frontend unit tests
        working-directory: services/frontend
        run: npm test -- --watchAll=false

      - name: Build frontend
        working-directory: services/frontend
        run: npm run build

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Dockerize and push recommendation
        working-directory: services/recommendation
        run: |
          docker build --pull -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-recommendation:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-recommendation:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-recommendation:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-recommendation:${{ github.sha }}

      - name: Dockerize and push chatbot
        working-directory: services/chatbot
        run: |
          docker build --pull -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-chatbot:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-chatbot:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-chatbot:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-chatbot:${{ github.sha }}

      - name: Dockerize and push login-reg
        working-directory: services/login-reg
        run: |
          docker build --pull -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-login-reg:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-login-reg:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-login-reg:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-login-reg:${{ github.sha }}

      - name: Dockerize and push frontend
        working-directory: services/frontend
        run: |
          docker build --pull -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-frontend:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-frontend:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-frontend:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-frontend:${{ github.sha }}

      - name: Dockerize and push SOP Review Service
        working-directory: services/sop-review-service
        run: |
          docker build --pull -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-sop-review:latest \
                       -t ${{ secrets.DOCKER_USERNAME }}/gradpilot-sop-review:${{ github.sha }} .
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-sop-review:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/gradpilot-sop-review:${{ github.sha }} 

  deploy-to-vm:
    needs: build-test-and-dockerize
    runs-on: ubuntu-latest
    steps:
      - name: Deploy on Azure VM via SSH
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.VM_IP}}
          username: seed
          key: ${{ secrets.SSH_KEY }}
          script: |
            cd /home/seed/CSE408/GradPilot
            git fetch origin
            git reset --hard origin/main

            docker compose down  
            docker image prune -af -f
            docker compose pull
            docker compose up -d
          timeout: 60m
